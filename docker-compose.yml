services:
  fastapi-app:
    build:
      context: ./fastapi-service
      dockerfile: Dockerfile
    image: 'fastapi-image:latest'
    container_name: 'fastapi-container'
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - ./fastapi-service:/fastapi-app  # 프로젝트와 컨테이너를 마운트 시켜 즉각적으로 반영되도록 설정
      - .env:/.env
    ports:
      - "${FASTAPI_HOST_PORT}:${FASTAPI_SERVER_PORT}"
    env_file:
      - .env
    depends_on:
      - mariadb
    networks:
      - docker-network-test
  
  springboot-app:
    build:
      context: ./springboot-service
      dockerfile: Dockerfile
    image: 'springboot-image:latest'
    container_name: 'springboot-container'
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - ./springboot-service:/springboot-app
    ports:
      - "${SPRINGBOOT_HOST_PORT}:${SPRINGBOOT_SERVER_PORT}"
    env_file:
      - .env
    depends_on:
      - mariadb
    networks:
      - docker-network-test

  mariadb:
    image: mariadb:latest
    container_name: 'mariadb-container'
    restart: always
    environment:
      - "MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}"  # 루트 사용자 비밀번호
      - "MYSQL_DATABASE=${MAREADB_DATABASE}"            # 자동 생성할 DB 이름
    volumes:
      - ./data/mariadb:/data/mariadb
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - '${MARIADB_HOST_PORT}:${MARIADB_SERVER_PORT}'
    networks:
      - docker-network-test

networks:
  docker-network-test:
    name: docker-network-test